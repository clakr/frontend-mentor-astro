---
type Props = {
  color?: string;
  font?: string;
  dark?: boolean;
  left?: boolean;
};

const {
  color = "blue",
  font = "Arial",
  dark = false,
  left = false,
} = Astro.props;
const baseColor = dark ? "white" : "black";
const basePosition = left ? "auto auto 1em 1em" : "auto 1em 1em auto";
const baseAlign = left ? "start" : "end";
---

<style
  lang="scss"
  define:vars={{ color, font, baseColor, basePosition, baseAlign }}
>
  footer {
    display: none;
    font-family: var(--font);
    color: var(--baseColor);
    font-size: 1.5em;
    position: absolute;
    inset: var(--basePosition);
    text-align: var(--baseAlign);
  }

  a {
    color: var(--color);
    font-weight: bold;
    text-decoration: underline;
    text-underline-offset: 0.1em;
    text-decoration-thickness: 0.1em;

    &:hover {
      opacity: 75%;
    }
  }

  @media screen and (min-width: 1024px) {
    footer {
      display: block;
    }
  }
</style>

<footer>
  <div>
    Challenge by <a href="https://www.frontendmentor.io/" target="_blank"
      >Frontend Mentor</a
    >
  </div>
  <div>
    Coded by <a href="https://github.com/clakr/" target="_blank">Clark Tolosa</a
    >
  </div>
</footer>
